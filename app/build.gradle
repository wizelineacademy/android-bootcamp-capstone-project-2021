plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jlleitschuh.gradle.ktlint'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "dev.ricsarabia.cryptochallenge"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Default build values
        setProperty("archivesBaseName", "cryptochallenge" + "-" + versionName)
        resValue "string", "app_name", "Crypto Challenge"
        buildConfigField "String", "BITSO_URL", "\"https://api-sandbox.bitso.com/v3/\""
    }
    signingConfigs {
        qa {
            keyAlias 'crypto_key'
            keyPassword 'noSoSecretPass'
            storeFile file('signing/crypto_keystore')
            storePassword 'noSoSecretPass'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BITSO_URL", "\"https://api.bitso.com/v3/\""
        }
        qa {
            resValue "string", "app_name", "Crypto Challenge [qa]"
            applicationIdSuffix ".qa"
            versionNameSuffix "-qa"
            signingConfig signingConfigs.qa
            buildConfigField "String", "BITSO_URL", "\"https://api.bitso.com/v3/\""
        }
        debug {
            resValue "string", "app_name", "Crypto Challenge [debug]"
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // AndroidX
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'

    // Views
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    // LiveData
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'

    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'

    // Navigation
    def nav_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // OKhttp interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.2"

    // Glide
    def glide_version = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Room
    def room_version = "2.3.0"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Dagger hilt
    def hilt_version = "2.38.1"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Mockito
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'

    // Junit
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    // For runBlockingTest, CoroutineDispatcher etc.
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"

    // Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

ktlint {
    android = true
    disabledRules = ["no-wildcard-imports"]
}